{
  "_args": [
    [
      {
        "raw": "angular-input-masks@2.1.1",
        "scope": null,
        "escapedName": "angular-input-masks",
        "name": "angular-input-masks",
        "rawSpec": "2.1.1",
        "spec": "2.1.1",
        "type": "version"
      },
      "/home/lucho/prj/emibg"
    ]
  ],
  "_from": "angular-input-masks@2.1.1",
  "_id": "angular-input-masks@2.1.1",
  "_inCache": true,
  "_location": "/angular-input-masks",
  "_nodeVersion": "4.2.2",
  "_npmUser": {
    "name": "assisrafael",
    "email": "igor.rafael@gmail.com"
  },
  "_npmVersion": "2.14.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "angular-input-masks@2.1.1",
    "scope": null,
    "escapedName": "angular-input-masks",
    "name": "angular-input-masks",
    "rawSpec": "2.1.1",
    "spec": "2.1.1",
    "type": "version"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/angular-input-masks/-/angular-input-masks-2.1.1.tgz",
  "_shasum": "0e927981591b548d23899f7527b2a87f7781ce77",
  "_shrinkwrap": null,
  "_spec": "angular-input-masks@2.1.1",
  "_where": "/home/lucho/prj/emibg",
  "author": {
    "name": "igor.rafael@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/assisrafael/angular-input-masks/issues"
  },
  "dependencies": {
    "br-validations": "^0.2.4",
    "moment": "^2.8.4",
    "string-mask": "^0.2.0"
  },
  "description": "Personalized input masks for AngularJS",
  "devDependencies": {
    "angular": "~1.3.16",
    "angular-i18n": "~1.3.16",
    "angular-mocks": "~1.3.16",
    "browserify": "^10.2.1",
    "browserify-istanbul": "^0.2.1",
    "conventional-changelog": "0.0.17",
    "express": "^4.8.5",
    "gulp": "^3.7.0",
    "gulp-bump": "^0.3.0",
    "gulp-exit": "0.0.2",
    "gulp-git": "^1.1.0",
    "gulp-header": "^1.2.2",
    "gulp-jshint": "^1.6.1",
    "gulp-load-plugins": "^0.10.0",
    "gulp-protractor": "~1.0.0",
    "gulp-rename": "^1.2.2",
    "gulp-uglify": "^1.1.0",
    "jasmine-core": "^2.2.0",
    "jshint-stylish": "~2.0.0",
    "karma": "^0.12.31",
    "karma-browserify": "^4.2.1",
    "karma-chrome-launcher": "^0.1.7",
    "karma-coverage": "0.2.6",
    "karma-coveralls": "^1.0.1",
    "karma-jasmine": "^0.3.5",
    "merge-stream": "^0.1.7",
    "minimist": "^1.1.1",
    "protractor": "^2.0.0",
    "run-sequence": "^1.0.2",
    "vinyl-buffer": "^1.0.0",
    "vinyl-source-stream": "^1.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "0e927981591b548d23899f7527b2a87f7781ce77",
    "tarball": "https://registry.npmjs.org/angular-input-masks/-/angular-input-masks-2.1.1.tgz"
  },
  "files": [
    "src/",
    "releases/",
    "index.js",
    "br.js",
    "us.js",
    "LICENSE",
    "CHANGELOG.md",
    "README.md"
  ],
  "gitHead": "06173800530a96a323553c0f6057d6a759e284b8",
  "homepage": "http://github.com/assisrafael/angular-input-masks",
  "keywords": [
    "input",
    "mask",
    "angularjs"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "assisrafael",
      "email": "igor.rafael@gmail.com"
    }
  ],
  "name": "angular-input-masks",
  "optionalDependencies": {},
  "readme": "# angular-input-masks [![Build Status](https://travis-ci.org/assisrafael/angular-input-masks.svg?branch=master)](https://travis-ci.org/assisrafael/angular-input-masks) [![Coverage Status](https://coveralls.io/repos/assisrafael/angular-input-masks/badge.svg?branch=master)](https://coveralls.io/r/assisrafael/angular-input-masks?branch=master)\n\n[![NPM](https://nodei.co/npm/angular-input-masks.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/angular-input-masks/)\n\n[![Join the chat at https://gitter.im/assisrafael/angular-input-masks](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/assisrafael/angular-input-masks?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![Bountysource](https://www.bountysource.com/badge/team?team_id=60791&style=bounties_posted)](https://www.bountysource.com/teams/angular-input-masks/bounties?utm_source=angular-input-masks&utm_medium=shield&utm_campaign=bounties_posted)\n\nOpinionated angular input masks. Provides ready to use masks with little (br/inscricao-estadual) to no configuration (number, cnpj, etc).\n\n### Compatibility\n\n- angular-input-masks@~2: angular@~1.3 and [ECMAScript 5 compliant browsers](http://kangax.github.io/compat-table/es5/) (however CI only tests chrome and firefox).\n- angular-input-masks@~1: angular@~1.2\n\nThe lib may be compatible with angular@~1.4, however it is not tested against that version.\n\n## Installation\n\nWith Bower:\n\n```\nbower install --save angular-input-masks\n```\n\nWith npm:\n\n```\nnpm install --save angular-input-masks\n```\n\n## Configuration\n\n### With bower or npm (without browserify):\n\n1. Import the ```angular-input-masks-standalone.min.js``` script in your page. For example:\n\n```\n<script src=\"angular-input-masks-standalone.min.js\"></script>\n```\n\nObs: for npm the build scripts are available inside ```releases``` folder.\n\n2. Include the module name ```ui.utils.masks``` in your angular app. For example:\n\n```\nangular.module('app', ['ui.utils.masks']);\n```\n\n### With npm and browserify:\n\n```\nangular.module('demo', [require('angular-input-masks')]);\n```\n\n## Internationalization\n\nSome masks are internationalized, so you need to include the proper angular-locale in your app(see: https://docs.angularjs.org/guide/i18n).\n\n## How to use\n\n### ui-number-mask ###\n\n - Example:\n\n```html\n<input type=\"text\" name=\"field\" ng-model=\"number\" ui-number-mask>\n```\n\n- Define the number of decimals (default is 2):\n\n```html\n<input type=\"text\" name=\"field\" ng-model=\"number\" ui-number-mask=\"3\">\n```\n\n- Allow negative numbers using the ```ui-negative-number``` attribute:\n\n```html\n<input type=\"text\" name=\"field\" ng-model=\"number\" ui-number-mask=\"4\" ui-negative-number>\n```\n\n- Support to the ```min```, ```max``` and ```ui-hide-group-sep``` attributes.\n\n```html\n<input type=\"text\" name=\"field\" ng-model=\"number\" ui-number-mask min=\"10.1\" max=\"100.9\">\n```\n\n```html\n<!-- Use 'ui-hide-group-sep' attribute if you don't want show the thousands separators-->\n<input type=\"text\" name=\"field\" ng-model=\"number\" ui-number-mask ui-hide-group-sep>\n```\n\n- Internationalized: Used the decimal separator and the thousands separator defined in the client browser configuration.\n\n### ui-percentage-mask ###\n\n - Example:\n\n```html\n<input type=\"text\" name=\"field\" ng-model=\"percentage\" ui-percentage-mask>\n```\n\n- You can set the number of decimals (default is 2):\n\n```html\n<input type=\"text\" name=\"field\" ng-model=\"percentage\" ui-percentage-mask=\"4\">\n```\n\n- The $modelValue is the $viewValue / 100, so $viewValue - 100% = $modelValue - 1\n\n- You can use the same value in $modelValue and $viewValue using ```ui-percentage-value```:\n\n```html\n<input type=\"text\" name=\"field\" ng-model=\"percentage\" ui-percentage-mask ui-percentage-value>\n```\n\n- Support to the ```min```, ```max``` and ```ui-hide-group-sep``` attributes.\n\n- Internationalized: Used the decimal separator and thousands separator defined in the client browser configuration.\n\n- The $modelValue is the $viewValue / 100, so $viewValue - 100% = $modelValue - 1\n\n### ui-money-mask ###\n\n - Example:\n\n```html\n<input type=\"text\" name=\"field\" ng-model=\"money\" ui-money-mask>\n```\n\n- Define the number of decimals (default is 2):\n\n```html\n<input type=\"text\" name=\"field\" ng-model=\"money\" ui-money-mask=\"3\">\n```\n\n- Support to the ```min```, ```max``` and ```ui-hide-group-sep``` attributes.\n\n- Internationalized: Used the currency symbol, decimal separator and thousands separator defined in the client browser configuration.\n\n### ui-br-phone-number ###\n```html\n<input type=\"text\" name=\"field\" ng-model=\"phoneNumber\" ui-br-phone-number>\n```\n\n### ui-br-cep-mask ###\n```html\n<input type=\"text\" name=\"field\" ng-model=\"cep\" ui-br-cep-mask>\n```\n\n### ui-br-cpf-mask ###\n\n - Example:\n\n```html\n<input type=\"text\" name=\"field\" ng-model=\"initializedCpf\" ui-br-cpf-mask>\n```\n\n### ui-br-cnpj-mask ###\n\n - Example:\n\n```html\n<input type=\"text\" name=\"field\" ng-model=\"initializedCnpj\" ui-br-cnpj-mask>\n```\n\n### ui-br-cpfcnpj-mask ###\n\n - Example:\n\n```html\n<input type=\"text\" name=\"field\" ng-model=\"initializedCpfCnpj1\" ui-br-cpfcnpj-mask>\n```\n\n### ui-br-ie-mask ###\n```html\n<select ng-init=\"ufs=['AC','AL','AM','TO']\" ng-model=\"selectedUF\" ng-options=\"uf for uf in ufs\"></select>\n<input type=\"text\" name=\"field19\" ng-model=\"ieField\" ui-br-ie-mask='selectedUF'>\n```\n- Support masks for all the 27 brazillian states.\n\n- Validations according to the [Sintegra especification](http://www.sintegra.gov.br/insc_est.html).\n\n### ui-time-mask ###\n-Example:\n\n```html\n<input type=\"text\" name=\"field\" ng-model=\"initializeTime\" ui-time-mask>\n```\n- Support to the ```short``` attributes.\n```html\n<input type=\"text\" name=\"field\" ng-model=\"initializeTime\" ui-time-mask=\"short\">\n```\n### More examples ###\n\n_See more usage examples in the [Demo page](http://assisrafael.github.io/angular-input-masks/)_\n\n\n### Masks without documentation (help wanted!)\n\n- ui-nfe-acces-key-mask\n- ui-time-mask\n- ui-date-mask\n- ui-br-boleto-bancario-mask\n- ui-scientific-notation-mask\n- ui-us-phone-number\n\n## Another build options\n\nIf you are using bower or npm (without browserify):\n\n- angular-input-masks-dependencies.js: provides all external dependencies (string-mask, br-validations, momentjs)\n- angular-input-masks-br.js: provides only global and BR directives, and does not include external dependencies (string-mask, br-validations, momentjs)\n- angular-input-masks-us.js: provides only global and US directives, and does not include external dependencies (string-mask, br-validations, momentjs)\n- angular-input-masks.js: provides all directives, and does not include external dependencies (string-mask, br-validations, momentjs)\n\nIf you are using npm with browserify:\n\n- ```require('angular-input-masks')```: provides all directives\n- ```require('angular-input-masks/br')```: only global and BR directives\n- ```require('angular-input-masks/us')```: only global and US directives\n\n## Filters\n\nLooking for related filters? Take a look at [angular-br-filters](https://github.com/the-darc/angular-br-filters)\n\n## Build\n\n```\nnpm install\ngulp build\n```\n\n### Tests\n\n- Unit:\n - Uses [Karma](http://karma-runner.github.io) + [Jasmine](http://jasmine.github.io/)\n - Files: src/**/*.test.js\n\n```\ngulp test:unit\n```\n\n- e2e:\n - Uses [Protractor](https://github.com/angular/protractor) + Jasmine\n - Files: src/**/*.spec.js\n\n\n```\ngulp test:e2e\n```\n\n- To run both tests:\n\n```\ngulp test\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/assisrafael/angular-input-masks.git"
  },
  "scripts": {
    "prepublish": "gulp build",
    "test": "gulp test"
  },
  "version": "2.1.1"
}
