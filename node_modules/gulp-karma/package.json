{
  "_args": [
    [
      {
        "raw": "gulp-karma@0.0.4",
        "scope": null,
        "escapedName": "gulp-karma",
        "name": "gulp-karma",
        "rawSpec": "0.0.4",
        "spec": "0.0.4",
        "type": "version"
      },
      "/home/lucho/prj/emibg"
    ]
  ],
  "_from": "gulp-karma@0.0.4",
  "_id": "gulp-karma@0.0.4",
  "_inCache": true,
  "_location": "/gulp-karma",
  "_npmUser": {
    "name": "lazd",
    "email": "lazdnet@gmail.com"
  },
  "_npmVersion": "1.3.24",
  "_phantomChildren": {
    "clone-stats": "0.0.1",
    "duplexer": "0.1.1",
    "escape-string-regexp": "1.0.5",
    "from": "0.1.7",
    "lodash._escapehtmlchar": "2.4.1",
    "lodash._escapestringchar": "2.4.1",
    "lodash._isnative": "2.4.1",
    "lodash._reunescapedhtml": "2.4.1",
    "lodash._shimkeys": "2.4.1",
    "lodash.defaults": "2.4.1",
    "lodash.isobject": "2.4.1",
    "lodash.values": "2.4.1",
    "meow": "3.7.0",
    "multipipe": "0.1.2",
    "object-keys": "0.4.0",
    "pause-stream": "0.0.11",
    "readable-stream": "1.0.34",
    "stream-combiner": "0.0.4",
    "through": "2.3.8",
    "wordwrap": "0.0.3"
  },
  "_requested": {
    "raw": "gulp-karma@0.0.4",
    "scope": null,
    "escapedName": "gulp-karma",
    "name": "gulp-karma",
    "rawSpec": "0.0.4",
    "spec": "0.0.4",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-karma/-/gulp-karma-0.0.4.tgz",
  "_shasum": "65cc202483f25369966ed60ff5dba1f6476131bd",
  "_shrinkwrap": null,
  "_spec": "gulp-karma@0.0.4",
  "_where": "/home/lucho/prj/emibg",
  "author": {
    "name": "Larry Davis",
    "email": "lazdnet@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/lazd/gulp-karma/issues"
  },
  "dependencies": {
    "event-stream": "~3.0.20",
    "gulp-util": "~2.2.14",
    "optimist": "~0.6.0",
    "xtend": "~2.1.1"
  },
  "deprecated": "Please use Karma directly: https://github.com/karma-runner/gulp-karma",
  "description": "Karma plugin for gulp",
  "devDependencies": {
    "mocha": "~1.15.1",
    "should": "~2.1.1"
  },
  "directories": {},
  "dist": {
    "shasum": "65cc202483f25369966ed60ff5dba1f6476131bd",
    "tarball": "https://registry.npmjs.org/gulp-karma/-/gulp-karma-0.0.4.tgz"
  },
  "engines": {
    "node": ">=0.6"
  },
  "homepage": "https://github.com/lazd/gulp-karma#readme",
  "keywords": [
    "gulpplugin",
    "karma"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "lazd",
      "email": "lazdnet@gmail.com"
    }
  ],
  "name": "gulp-karma",
  "optionalDependencies": {},
  "peerDependencies": {
    "karma": ">=0.10 <=0.13"
  },
  "readme": "# gulp-karma [![NPM version][npm-image]][npm-url]\n<!-- [![Build status][travis-image]][travis-url]-->\n> Karma plugin for gulp 3\n\n## Usage\n\nFirst, install `gulp-karma` as a development dependency:\n\n```shell\nnpm install --save-dev gulp-karma\n```\n\nThen, add it to your `gulpfile.js`:\n\n```javascript\nvar karma = require('gulp-karma');\n\nvar testFiles = [\n  'client/todo.js',\n  'client/todo.util.js',\n  'client/todo.App.js',\n  'test/client/*.js'\n];\n\ngulp.task('test', function() {\n  // Be sure to return the stream\n  return gulp.src(testFiles)\n    .pipe(karma({\n      configFile: 'karma.conf.js',\n      action: 'run'\n    }))\n    .on('error', function(err) {\n      // Make sure failed tests cause gulp to exit non-zero\n      throw err;\n    });\n});\n\ngulp.task('default', function() {\n  gulp.src(testFiles)\n    .pipe(karma({\n      configFile: 'karma.conf.js',\n      action: 'watch'\n    }));\n});\n```\n\n## API\n\n### karma(options)\n\n#### options.configFile\nType: `String`\n\nThe path to the Karma configuration file.\n\n#### options.action\nType: `String`  \nDefault: `run`\n\nOne of the following:\n\n  * **`run`**: Start the server, run tests once, then exit.\n  * **`watch`**: Start the server, run tests once, then watch for changes and run when files change.\n\n#### options.*\n\nAny Karma option can be passed as part of the options object. See [Karma Configuration] for a complete list of options. **Note:** It's best practice to put options in your Karma config file.\n\n\n## Notes\n\n## Task return value\n\nKarma runs asynchronously. When using `action: 'run'` in a task, you should return the stream so gulp knows the task finished.\n\n## Watching\n\nDue to the way Karma works, using `gulp.watch` to watch files results in contrived usage that doesn't work as expected in some cases. As a result, Karma's watch mechanism is employed to make usage of this plugin as straight forward as possible.\n\n## Globs\n\nGlobs are resolved before they're sent to Karma, so if you add a new file that matches a glob you passed using `gulp.src('test/*').pipe(karma)`, it won't be caught by Karma.\n\n\n[Karma Configuration]: http://karma-runner.github.io/0.10/config/configuration-file.html\n[travis-url]: http://travis-ci.org/lazd/gulp-karma\n[travis-image]: https://secure.travis-ci.org/lazd/gulp-karma.png?branch=master\n[npm-url]: https://npmjs.org/package/gulp-karma\n[npm-image]: https://badge.fury.io/js/gulp-karma.png\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/lazd/gulp-karma.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.0.4"
}
