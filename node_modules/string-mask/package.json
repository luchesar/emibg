{
  "_args": [
    [
      {
        "raw": "string-mask@^0.2.0",
        "scope": null,
        "escapedName": "string-mask",
        "name": "string-mask",
        "rawSpec": "^0.2.0",
        "spec": ">=0.2.0 <0.3.0",
        "type": "range"
      },
      "/home/lucho/prj/emibg/node_modules/angular-input-masks"
    ]
  ],
  "_from": "string-mask@>=0.2.0 <0.3.0",
  "_id": "string-mask@0.2.1",
  "_inCache": true,
  "_location": "/string-mask",
  "_nodeVersion": "0.10.28",
  "_npmUser": {
    "name": "the-darc",
    "email": "darc.tec@gmail.com"
  },
  "_npmVersion": "2.7.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "string-mask@^0.2.0",
    "scope": null,
    "escapedName": "string-mask",
    "name": "string-mask",
    "rawSpec": "^0.2.0",
    "spec": ">=0.2.0 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/angular-input-masks"
  ],
  "_resolved": "https://registry.npmjs.org/string-mask/-/string-mask-0.2.1.tgz",
  "_shasum": "e86ddfc786e56208ba42afc934156d7f36abfbfe",
  "_shrinkwrap": null,
  "_spec": "string-mask@^0.2.0",
  "_where": "/home/lucho/prj/emibg/node_modules/angular-input-masks",
  "author": {
    "name": "Daniel Campos",
    "email": "darc.tec@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/the-darc/string-mask/issues"
  },
  "dependencies": {},
  "description": "A string formatter and validator based on masks",
  "devDependencies": {
    "gulp": "^3.7.0",
    "gulp-jshint": "^1.6.1",
    "gulp-spawn-mocha": "^0.1.4",
    "jshint-stylish": "^0.2.0",
    "should": "^4.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "e86ddfc786e56208ba42afc934156d7f36abfbfe",
    "tarball": "https://registry.npmjs.org/string-mask/-/string-mask-0.2.1.tgz"
  },
  "gitHead": "6f555714f8e0c282d9e3c958c4b9111ad44febb3",
  "homepage": "https://github.com/the-darc/string-mask#readme",
  "id": "/string-mask",
  "keywords": [
    "mask",
    "formatter",
    "string",
    "validator",
    "validation"
  ],
  "license": "MIT",
  "main": "src/string-mask.js",
  "maintainers": [
    {
      "name": "the-darc",
      "email": "darc.tec@gmail.com"
    }
  ],
  "name": "string-mask",
  "optionalDependencies": {},
  "readme": "[![npm version](https://badge.fury.io/js/string-mask.svg)](http://badge.fury.io/js/string-mask)\n[![Bower version](https://badge.fury.io/bo/string-mask.svg)](http://badge.fury.io/bo/string-mask)\n[![Build Status](https://travis-ci.org/the-darc/string-mask.svg?branch=master)](https://travis-ci.org/the-darc/string-mask)\n\n#string-mask\n\nA string formatter and validator based on masks.\n\n## Installation ##\n\n### With npm\n\n```javascript\nnpm install --save string-mask\n```\n\n### With bower\n\n```javascript\nbower install --save string-mask\n```\n\n## Special mask's characters ##\n\nCharacter | Description\n--- | ---\n`0` | Any numbers\n`9` | Any numbers (Optional)\n`#` | Any numbers (recursive)\n`A` | Any aphanumeric character __Not implemented yet__\n`a` | Any aphanumeric character (Optional) __Not implemented yet__\n`S` | Any letter\n`U` | Any letter (All lower case character will be mapped to uppercase)\n`L` | Any letter (All upper case character will be mapped to lowercase)\n`$` | Escape character, used to escape any of the special formatting characters.\n\n## Usage ##\n\n### Number ###\n\n```javascript\n\tvar formatter = new StringMask('#0');\n\tvar result = formatter.apply('123'); // 123\n```\n\n### Two Decimal number with thousands separators###\n\n```javascript\n\tvar formatter = new StringMask('#.##0,00', {reverse: true});\n\tvar result = formatter.apply('100123456'); // 1.001.234,56\n\tresult = formatter.apply('6'); // 0,06\n```\n\n### Phone number ###\n\n```javascript\n\tvar formatter = new StringMask('+00 (00) 0000-0000');\n\tvar result = formatter.apply('553122222222'); // +55 (31) 2222-2222\n```\n\n### Percentage ###\n\n```javascript\n\tvar formatter = new StringMask('#0,00%');\n\tvar result = formatter.apply('001'); // 0,01%\n```\n\n### Brazilian CPF number ###\n\n```javascript\n\tvar formatter = new StringMask('000.000.000-00');\n\tvar result = formatter.apply('12965815620'); // 129.658.156-20\n```\n\n### Date and time ###\n\n```javascript\n\tvar formatter = new StringMask('90/90/9900');\n\tvar result = formatter.apply('1187'); // 1/1/87\n```\n\n### Convert Case ###\n\n```javascript\n\tvar formatter = new StringMask('UUUUUUUUUUUUU');\n\tvar result = formatter.apply('To Upper Case'); // TO UPPER CASE\n```\n\n```javascript\n\tvar formatter = new StringMask('LLLLLLLLLLLLL');\n\tvar result = formatter.apply('To Lower Case'); // to lower case\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/the-darc/string-mask.git"
  },
  "scripts": {
    "test": "gulp test"
  },
  "version": "0.2.1"
}
