{
  "_args": [
    [
      {
        "raw": "osenv@0.1.0",
        "scope": null,
        "escapedName": "osenv",
        "name": "osenv",
        "rawSpec": "0.1.0",
        "spec": "0.1.0",
        "type": "version"
      },
      "/home/lucho/prj/emibg/node_modules/bower"
    ]
  ],
  "_from": "osenv@0.1.0",
  "_id": "osenv@0.1.0",
  "_inCache": true,
  "_location": "/osenv",
  "_npmUser": {
    "name": "robertkowalski",
    "email": "rok@kowalski.gd"
  },
  "_npmVersion": "1.4.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "osenv@0.1.0",
    "scope": null,
    "escapedName": "osenv",
    "name": "osenv",
    "rawSpec": "0.1.0",
    "spec": "0.1.0",
    "type": "version"
  },
  "_requiredBy": [
    "/bower",
    "/configstore",
    "/npmconf",
    "/pangyp"
  ],
  "_resolved": "https://registry.npmjs.org/osenv/-/osenv-0.1.0.tgz",
  "_shasum": "61668121eec584955030b9f470b1d2309504bfcb",
  "_shrinkwrap": null,
  "_spec": "osenv@0.1.0",
  "_where": "/home/lucho/prj/emibg/node_modules/bower",
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/"
  },
  "bugs": {
    "url": "https://github.com/isaacs/osenv/issues"
  },
  "dependencies": {},
  "description": "Look up environment settings specific to different operating systems",
  "devDependencies": {
    "tap": "~0.4.9"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "61668121eec584955030b9f470b1d2309504bfcb",
    "tarball": "https://registry.npmjs.org/osenv/-/osenv-0.1.0.tgz"
  },
  "homepage": "https://github.com/isaacs/osenv#readme",
  "keywords": [
    "environment",
    "variable",
    "home",
    "tmpdir",
    "path",
    "prompt",
    "ps1"
  ],
  "license": "BSD",
  "main": "osenv.js",
  "maintainers": [
    {
      "name": "isaacs",
      "email": "i@izs.me"
    },
    {
      "name": "robertkowalski",
      "email": "rok@kowalski.gd"
    }
  ],
  "name": "osenv",
  "optionalDependencies": {},
  "readme": "# osenv\n\nLook up environment settings specific to different operating systems.\n\n## Usage\n\n```javascript\nvar osenv = require('osenv')\nvar path = osenv.path()\nvar user = osenv.user()\n// etc.\n\n// Some things are not reliably in the env, and have a fallback command:\nvar h = osenv.hostname(function (er, hostname) {\n  h = hostname\n})\n// This will still cause it to be memoized, so calling osenv.hostname()\n// is now an immediate operation.\n\n// You can always send a cb, which will get called in the nextTick\n// if it's been memoized, or wait for the fallback data if it wasn't\n// found in the environment.\nosenv.hostname(function (er, hostname) {\n  if (er) console.error('error looking up hostname')\n  else console.log('this machine calls itself %s', hostname)\n})\n```\n\n## osenv.hostname()\n\nThe machine name.  Calls `hostname` if not found.\n\n## osenv.user()\n\nThe currently logged-in user.  Calls `whoami` if not found.\n\n## osenv.prompt()\n\nEither PS1 on unix, or PROMPT on Windows.\n\n## osenv.tmpdir()\n\nThe place where temporary files should be created.\n\n## osenv.home()\n\nNo place like it.\n\n## osenv.path()\n\nAn array of the places that the operating system will search for\nexecutables.\n\n## osenv.editor() \n\nReturn the executable name of the editor program.  This uses the EDITOR\nand VISUAL environment variables, and falls back to `vi` on Unix, or\n`notepad.exe` on Windows.\n\n## osenv.shell()\n\nThe SHELL on Unix, which Windows calls the ComSpec.  Defaults to 'bash'\nor 'cmd'.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/isaacs/osenv.git"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "version": "0.1.0"
}
