{
  "_args": [
    [
      {
        "raw": "gulp-changed@1.0.0",
        "scope": null,
        "escapedName": "gulp-changed",
        "name": "gulp-changed",
        "rawSpec": "1.0.0",
        "spec": "1.0.0",
        "type": "version"
      },
      "/home/lucho/prj/emibg"
    ]
  ],
  "_from": "gulp-changed@1.0.0",
  "_id": "gulp-changed@1.0.0",
  "_inCache": true,
  "_location": "/gulp-changed",
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "1.4.21",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gulp-changed@1.0.0",
    "scope": null,
    "escapedName": "gulp-changed",
    "name": "gulp-changed",
    "rawSpec": "1.0.0",
    "spec": "1.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-changed/-/gulp-changed-1.0.0.tgz",
  "_shasum": "84c476118677755a233bb2ee7dfbf036fc573380",
  "_shrinkwrap": null,
  "_spec": "gulp-changed@1.0.0",
  "_where": "/home/lucho/prj/emibg",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "http://sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/gulp-changed/issues"
  },
  "contributors": [
    {
      "name": "Alex Gorbatchev",
      "url": "https://github.com/alexgorbatchev"
    },
    {
      "name": "Bo-Yi Wu",
      "url": "https://github.com/appleboy"
    },
    {
      "name": "Milan Gardian",
      "url": "https://github.com/milang"
    }
  ],
  "dependencies": {
    "gulp-util": "^3.0.0",
    "through2": "^0.6.1"
  },
  "description": "Only pass through changed files",
  "devDependencies": {
    "concat-stream": "^1.4.6",
    "gulp": "^3.0.0",
    "mocha": "*",
    "rimraf": "^2.2.6"
  },
  "directories": {},
  "dist": {
    "shasum": "84c476118677755a233bb2ee7dfbf036fc573380",
    "tarball": "https://registry.npmjs.org/gulp-changed/-/gulp-changed-1.0.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "8762ee5d45549371ca423753068dfd32cfa7b85e",
  "homepage": "https://github.com/sindresorhus/gulp-changed#readme",
  "keywords": [
    "gulpplugin",
    "file",
    "files",
    "changed",
    "newer",
    "modified",
    "modification",
    "updated",
    "time",
    "mtime",
    "stat",
    "cache",
    "cached",
    "passthrough"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "gulp-changed",
  "optionalDependencies": {},
  "readme": "# [gulp](http://gulpjs.com)-changed [![Build Status](https://travis-ci.org/sindresorhus/gulp-changed.svg?branch=master)](https://travis-ci.org/sindresorhus/gulp-changed)\n\n> Only pass through changed files\n\nNo more wasting precious time on processing unchanged files.\n\nBy default it's only able to detect whether files in the stream changed. If you require something more advanced like knowing if imports/dependencies changed, create a custom comparator, or use [another plugin](https://github.com/gulpjs/gulp#incremental-builds).\n\n\n## Install\n\n```sh\n$ npm install --save-dev gulp-changed\n```\n\n\n## Usage\n\n```js\nvar gulp = require('gulp');\nvar changed = require('gulp-changed');\nvar ngmin = require('gulp-ngmin'); // just as an example\n\nvar SRC = 'src/*.js';\nvar DEST = 'dist';\n\ngulp.task('default', function () {\n\treturn gulp.src(SRC)\n\t\t.pipe(changed(DEST))\n\t\t// ngmin will only get the files that\n\t\t// changed since the last time it was run\n\t\t.pipe(ngmin())\n\t\t.pipe(gulp.dest(DEST));\n});\n```\n\n## API\n\n### changed(destination, options)\n\n#### destination\n\nType: `string`\n\nThe destination directory. Same as you put into `gulp.dest()`.\n\nThis is needed to be able to compare the current files with the destination files.\n\n#### options\n\n##### cwd\n\nType: `string`  \nDefault: `process.cwd()`\n\nThe working directory the folder is relative to.\n\n##### extension\n\nType: `string`\n\nExtension of the destination files.\n\nUseful if it differs from the original, like in the example below:\n\n```js\ngulp.task('jade', function () {\n\tgulp.src('src/**/*.jade')\n\t\t.pipe(changed('app', {extension: '.html'}))\n\t\t.pipe(jade())\n\t\t.pipe(gulp.dest('app'))\n});\n```\n\n##### hasChanged\n\nType: `function`  \nDefault: `changed.compareLastModifiedTime`\n\nFunction that determines whether the source file is different from the destination file.\n\n###### Built-in comparators\n\n- `changed.compareLastModifiedTime`\n- `changed.compareSha1Digest`\n\n###### Example\n\n```js\ngulp.task('jade', function () {\n\tgulp.src('src/**/*.jade')\n\t\t.pipe(changed('app', {hasChanged: changed.compareSha1Digest}))\n\t\t.pipe(jade())\n\t\t.pipe(gulp.dest('app'));\n});\n```\n\nYou can also supply a custom comparator function which will receive the following arguments:\n\n- `stream` *([transform object stream](https://github.com/rvagg/through2#transformfunction))* - should be used to queue `sourceFile` if it passes some comparison\n- `callback` *(function)* - should be called when done\n- `sourceFile` *([vinyl file object](https://github.com/wearefractal/vinyl#file))*\n- `destPath` *(string)* - destination for `sourceFile` as an absolute path\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/gulp-changed.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.0.0"
}
