{
  "_args": [
    [
      {
        "raw": "gulp-streamify@0.0.5",
        "scope": null,
        "escapedName": "gulp-streamify",
        "name": "gulp-streamify",
        "rawSpec": "0.0.5",
        "spec": "0.0.5",
        "type": "version"
      },
      "/home/lucho/prj/emibg"
    ]
  ],
  "_from": "gulp-streamify@0.0.5",
  "_id": "gulp-streamify@0.0.5",
  "_inCache": true,
  "_location": "/gulp-streamify",
  "_npmUser": {
    "name": "nfroidure",
    "email": "nfroidure@elitwork.com"
  },
  "_npmVersion": "1.4.3",
  "_phantomChildren": {
    "clone-stats": "0.0.1",
    "escape-string-regexp": "1.0.5",
    "lodash._escapehtmlchar": "2.4.1",
    "lodash._escapestringchar": "2.4.1",
    "lodash._isnative": "2.4.1",
    "lodash._reunescapedhtml": "2.4.1",
    "lodash._shimkeys": "2.4.1",
    "lodash.defaults": "2.4.1",
    "lodash.isobject": "2.4.1",
    "lodash.values": "2.4.1",
    "meow": "3.7.0",
    "multipipe": "0.1.2",
    "readable-stream": "1.0.34"
  },
  "_requested": {
    "raw": "gulp-streamify@0.0.5",
    "scope": null,
    "escapedName": "gulp-streamify",
    "name": "gulp-streamify",
    "rawSpec": "0.0.5",
    "spec": "0.0.5",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-streamify/-/gulp-streamify-0.0.5.tgz",
  "_shasum": "685d20512552ac5765624b4131b4b1ecadf00ec1",
  "_shrinkwrap": null,
  "_spec": "gulp-streamify@0.0.5",
  "_where": "/home/lucho/prj/emibg",
  "author": {
    "name": "Nicolas Froidure",
    "url": "http://www.insertafter.com/blog.html"
  },
  "bugs": {
    "url": "https://github.com/nfroidure/gulp-streamify/issues"
  },
  "dependencies": {
    "gulp-util": "~2.2.14",
    "plexer": "0.0.2",
    "readable-stream": "^1.0.26-2"
  },
  "description": "Wrap old plugins to support streams.",
  "devDependencies": {
    "coveralls": "~2.10.0",
    "event-stream": "~3.1.1",
    "istanbul": "~0.2.6",
    "mocha": "~1.18.2",
    "mocha-lcov-reporter": "0.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "685d20512552ac5765624b4131b4b1ecadf00ec1",
    "tarball": "https://registry.npmjs.org/gulp-streamify/-/gulp-streamify-0.0.5.tgz"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "homepage": "https://github.com/nfroidure/gulp-streamify",
  "keywords": [
    "gulpplugin",
    "gulp",
    "gulp-plugin",
    "stream",
    "wrapper"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/nfroidure/gulp-streamify/blob/master/LICENSE"
    }
  ],
  "main": "src/index.js",
  "maintainers": [
    {
      "name": "nfroidure",
      "email": "nfroidure@elitwork.com"
    }
  ],
  "name": "gulp-streamify",
  "optionalDependencies": {},
  "readme": "# gulp-streamify\n> Wrap old [Gulp](http://gulpjs.com/) plugins to support streams.\n\n[![NPM version](https://badge.fury.io/js/gulp-streamify.png)](https://npmjs.org/package/gulp-streamify) [![Build status](https://secure.travis-ci.org/nfroidure/gulp-streamify.png)](https://travis-ci.org/nfroidure/gulp-streamify) [![Dependency Status](https://david-dm.org/nfroidure/gulp-streamify.png)](https://david-dm.org/nfroidure/gulp-streamify) [![devDependency Status](https://david-dm.org/nfroidure/gulp-streamify/dev-status.png)](https://david-dm.org/nfroidure/gulp-streamify#info=devDependencies) [![Coverage Status](https://coveralls.io/repos/nfroidure/gulp-streamify/badge.png?branch=master)](https://coveralls.io/r/nfroidure/gulp-streamify?branch=master)\n\nIt is pretty annoying when Gulp plugins doesn't support streams. This plugin\n allows you to wrap them in order to use the stream mode anyway. It is pretty\n useful when you want to take advantage of streams on part of your pipelines.\n\n*Note to gulp plugin developpers*: This plugin should not discourage you to\n support streams in your own plugins. I made this plug-in to avoid beeing\n stucked with a bad plugin. If your underlying library support streams, please,\n use it! Even if it doesn't, use\n [BufferStreams](https://npmjs.org/package/bufferstreams)\n in your plugins to support streams at the plugin level (it won't block files\n to buffer their contents like this library has to do to work). Here is a\n [sample of bufferstreams usage](https://github.com/nfroidure/gulp-ttf2eot/blob/master/src/index.js#L73)\n in Gulp plugins.\n\n## Usage\n\nFirst, install `gulp-streamify` as a development dependency:\n\n```shell\nnpm install --save-dev gulp-streamify\n```\n\nThen, add it to your `gulpfile.js` and wrap all that shit:\n\n```javascript\nvar gStreamify = require('gulp-streamify')\n  , noStreamPlugin = require('gulp-no-stream')\n;\n\ngulp.task('stream', function(){\n  gulp.src(['**/*'])\n    .pipe( gStreamify( noStreamPlugin() ) )\n    .pipe(gulp.dest('/tmp'));\n});\n```\n\nIf you have several plugins to wrap together, prefer calling `gulp-streamify` once:\n```javascript\nvar gStreamify = require('gulp-streamify')\n  , noStreamPlugin = require('gulp-no-stream')\n  , noStreamPlugin2 = require('gulp-no-stream2')\n;\n\ngulp.task('stream', function(){\n  gulp.src(['**/*'])\n    .pipe(gStreamify(\n      noStreamPlugin().pipe(noStreamPlugin2())\n    ))\n    .pipe(gulp.dest('/tmp'));\n});\n```\n\n### Contributing / Issues\n\nYou may want to contribute to this project, pull requests are welcome if you\n accept to publish under the MIT licence.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/nfroidure/gulp-streamify.git"
  },
  "scripts": {
    "cover": "./node_modules/istanbul/lib/cli.js cover --report html ./node_modules/mocha/bin/_mocha -- tests/*.mocha.js -R spec -t 5000",
    "coveralls": "./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha --report lcovonly -- tests/*.mocha.js -R spec -t 5000 && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage",
    "test": "./node_modules/mocha/bin/mocha tests/*.mocha.js",
    "trinity": "npm-check-updates -u && npm test && git commit package.json -m \"Dependencies update\" && git push"
  },
  "version": "0.0.5"
}
