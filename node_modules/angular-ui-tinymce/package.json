{
  "name": "angular-ui-tinymce",
  "version": "0.0.19",
  "descriptin": "This directive allows you to add a tinymce to your form elements.",
  "author": {
    "name": "https://github.com/angular-ui/ui-tinymce/graphs/contributors"
  },
  "license": "MIT",
  "homepage": "http://angular-ui.github.com",
  "main": "src/tinymce.js",
  "dependencies": {},
  "devDependencies": {
    "grunt": "~1.0.1",
    "grunt-contrib-jshint": "1.0.0",
    "grunt-contrib-uglify": "~0.11.1",
    "grunt-conventional-changelog": "~1.0.0",
    "grunt-karma": "2.0.0",
    "jasmine-core": "~2.3.4",
    "karma": "0.13.22",
    "karma-chrome-launcher": "~0.1.3",
    "karma-firefox-launcher": "~0.1.3",
    "karma-jasmine": "~0.3.5",
    "load-grunt-tasks": "~0.2.0"
  },
  "scripts": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/angular-ui/ui-tinymce.git"
  },
  "gitHead": "30434e227768c47cdcf97b552cdbc4f12fad86da",
  "readme": "# UI Tinymce - [AngularJS](http://angularjs.org/) directive for [TinyMCE](http://tinymce.com).\n\n[![Build Status](https://travis-ci.org/angular-ui/ui-tinymce.png)](https://travis-ci.org/angular-ui/ui-tinymce) \n[![Join the chat at https://gitter.im/angular-ui/ui-tinymce](https://badges.gitter.im/angular-ui/ui-tinymce.svg)](https://gitter.im/angular-ui/ui-tinymce?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n# Call for Maintainer\n\nThis library is looking for a maintainer. If you feel up to the task please open an issue indicating so.\n\n# Requirements\n\n- AngularJS 1.4.x or higher and it has been tested with Angular 1.4.8.\n- TinyMCE 4\n\n# Testing\n\nWe use karma and jshint to ensure the quality of the code.  The easiest way to run these checks is to use grunt:\n```\nnpm install -g grunt-cli\nnpm install\nbower install\ngrunt\n```  \n\nThe karma task will try to open Chrome as a browser in which to run the tests.  Make sure this is available or change the configuration in `test\\test.config.js`\n\n# Usage\n\nWe use [bower](http://twitter.github.com/bower/) for dependency management.  Add\n\n```\ndependencies: {\n\"angular-ui-tinymce\": \"latest\"\n}\n```\n\nTo your `bower.json` file. Then run\n\n```\nbower install\n```\n\nThis will copy the ui-tinymce files into your `components` folder, along with its dependencies. Load the script files in your application:\n\n```html\n<script type=\"text/javascript\" src=\"app/bower_components/tinymce/tinymce.js\"></script>\n<script type=\"text/javascript\" src=\"app/bower_components/angular/angular.js\"></script>\n<script type=\"text/javascript\" src=\"app/bower_components/angular-ui-tinymce/src/tinymce.js\"></script>\n```\n\nAdd the tinymce module as a dependency to your application module:\n\n```javascript\nvar myAppModule = angular.module('MyApp', ['ui.tinymce'])\n```\n\nApply the directive to your form elements:\n\n```html\n<form method=\"post\">\n  <textarea ui-tinymce ng-model=\"tinymceModel\"></textarea>\n</form>\n```\n\n**Be sure not to set an `id` attribute**. This is because the directive needs to maintain selector knowledge in order to handle buggy behavior in TinyMCE when DOM manipulation is involved, such as in a reordering of HTML through ng-repeat or DOM destruction/recreation through ng-if.\n\nWhen using other directives which do DOM manipulation involving elements with `ui-tinymce`, you may need to re-render the editor due to this buggy behavior with TinyMCE. For those situations, it is recommended to use the `$tinymce:refresh` event, which will handle re-rendering the editor to fix this problem.\n\n## Working with ng-model\n\nThe ui-tinymce directive plays nicely with the ng-model directive such as ng-required.\n\nIf you add the ng-model directive to same the element as ui-tinymce then the text in the editor is automatically synchronized with the model value.\n\n_The ui-tinymce directive stores the configuration options as specified in the [TinyMCE documentation](http://www.tinymce.com/wiki.php/Configuration) and expects the model value to be a html string or raw text, depending on whether `raw` is `true` (default value is `false`)._\n\n**Note:** Make sure you using scopes correctly by following [this wiki page](https://github.com/angular/angular.js/wiki/Understanding-Scopes). If you are having issues with your model not updating, make sure you have a '.' in your model.\n\n> This issue with primitives can be easily avoided by following the \"best practice\" of always have a '.' in your ng-models â€“ watch 3 minutes worth. Misko demonstrates the primitive binding issue with ng-switch.\n\n## Options\n\nThe directive supports all of the standard TinyMCE initialization options as listed [here](http://www.tinymce.com/wiki.php/Configuration).\n\nUse the [setup](https://www.tinymce.com/docs/configure/integration-and-setup/#setup) function to bind different events:\n\n```javascript\nscope.tinymceOptions = {\n  setup: function(editor) {\n      //Focus the editor on load\n      $timeout(function(){ editor.focus(); });\n      editor.on(\"init\", function() {\n        ...\n      });\n      editor.on(\"click\", function() {\n        ...\n      });\n  }\n};\n```\nBy default all TinyMCE content that is set to `ngModel` will be whitelisted by `$sce`.\n\nIn addition, it supports these additional optional options\n\n- `format` Format to get content as, i.e. 'raw' for raw HTML, or 'text' for text only. Defaults to 'html'. Documentation [here](http://www.tinymce.com/wiki.php/api4:method.tinymce.Editor.getContent)\n- `baseURL` This will set [baseURL property on the EditorManager](https://www.tinymce.com/docs/api/class/tinymce.editormanager/)\n- `debounce` This will debounce the model update which helps with performance of editors with large text. Defaults to true.\n\nThis option is only supported when present on the `uiTinymceConfig` global injectable - this injectable needs to be an object.\n\n- `baseUrl` Sets the base url used by tinymce asset loading\n\n```javascript\nmyAppModule.controller('MyController', function($scope) {\n  $scope.tinymceOptions = {\n    onChange: function(e) {\n      // put logic here for keypress and cut/paste changes\n    },\n    inline: false,\n    plugins : 'advlist autolink link image lists charmap print preview',\n    skin: 'lightgray',\n    theme : 'modern'\n  };\n});\n```\n```html\n<form method=\"post\">\n  <textarea ui-tinymce=\"tinymceOptions\" ng-model=\"tinymceModel\"></textarea>\n</form>\n```\n\n## Testing your Application (Protractor)\n\nIf you are testing your application using Protractor and you wish to be able to automate the\ncontribution of rich text content as part of the tests, use the TinyMCE API method `insertContent`\nin conjunction with the WebDriver's `executeScript` method, like this:\n\n```javascript\nbrowser.driver.executeScript(\"tinyMCE.activeEditor.insertContent('This is <em>RICH</em> content')\");\n```\n\nNote that if you use the TinyMCE API method `setContent`, this will fail to update the Angular model\nwith the entered content, so use `insertContent` instead.\n\n----\n\n\n# Contributing to the project\n\nWe are always looking for the quality contributions! Please check the [CONTRIBUTING.md](CONTRIBUTING.md) for the contribution guidelines.\n",
  "readmeFilename": "README.md",
  "description": "[![Build Status](https://travis-ci.org/angular-ui/ui-tinymce.png)](https://travis-ci.org/angular-ui/ui-tinymce)  [![Join the chat at https://gitter.im/angular-ui/ui-tinymce](https://badges.gitter.im/angular-ui/ui-tinymce.svg)](https://gitter.im/angular-ui/ui-tinymce?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)",
  "bugs": {
    "url": "https://github.com/angular-ui/ui-tinymce/issues"
  },
  "_id": "angular-ui-tinymce@0.0.19",
  "_shasum": "81539820c858bcbbae69fb38489b8725b2f54ad8",
  "_from": "angular-ui/ui-tinymce",
  "_resolved": "git://github.com/angular-ui/ui-tinymce.git#30434e227768c47cdcf97b552cdbc4f12fad86da"
}
